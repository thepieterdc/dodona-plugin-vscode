name: Test

on:
  pull_request:
    branches:
      - master

  push:
    branches:
      - master

jobs:
  integration:
    runs-on: ubuntu-latest

    services:
      database:
        image: mariadb
        env:
          MYSQL_DATABASE: "dodona"
          MYSQL_ROOT_PASSWORD: "dodona"
          MYSQL_HOST: "localhost"
        options: --health-cmd "mysqladmin ping --silent" --health-interval 10s --health-timeout 10s --health-retries 6
      dodona:
        image: ghcr.io/dodona-edu/dodona:develop-latest
        ports:
          - 3000:3000

    steps:
      - uses: actions/checkout@v3

      - name: Install xvfb
        run: sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0

      - name: Install Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get the Yarn cache directory
        id: yarn-cache
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn dependencies
        uses: actions/cache@v3.2.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install

      - name: Wait for dodona to boot
        run: timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000/activities.json)" != "200" ]]; do sleep 5; done' || false

      - run: xvfb-run -a yarn run test:integration

      - name: Upload the coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: integration
          token: ${{ secrets.CODECOV_TOKEN }}

  unit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get the Yarn cache directory
        id: yarn-cache
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn dependencies
        uses: actions/cache@v3.2.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install

      - run: yarn run test:unit

      - name: Upload the coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unit
          token: ${{ secrets.CODECOV_TOKEN }}